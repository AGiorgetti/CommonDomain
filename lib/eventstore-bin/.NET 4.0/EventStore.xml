<?xml version="1.0"?>
<doc>
  <assembly>
    <name>EventStore</name>
  </assembly>
  <members>
    <member name="T:EventStore.CommittedEventStream">
      <summary>
            Represents a series of events which have been fully committed and applied to the stream indicated.
            </summary>
    </member>
    <member name="M:EventStore.CommittedEventStream.#ctor(System.Guid,System.Int32,System.Int32,System.Collections.Generic.ICollection{System.Object},System.Collections.Generic.ICollection{System.Guid},System.Object)">
      <summary>
            Initializes a new instance of the CommittedEventStream class.
            </summary>
      <param name="streamId">The value which uniquely identifies the stream to which the series of committed events apply.</param>
      <param name="streamRevision">The value indicating the most recent revision of the stream for the events retreived.</param>
      <param name="commitSequence">The value indicating the most recent commit applied to the stream for the events retreived.</param>
      <param name="events">The series of committed events.</param>
      <param name="commitIdentifiers">The set of values which uniquely identify the commits associated with set of events.</param>
      <param name="snapshot">The snapshot, if any, containing a serialized revision of the stream upon which the events provided can be applied.</param>
    </member>
    <member name="P:EventStore.CommittedEventStream.StreamId">
      <summary>
            Gets a value which uniquely identifies the stream to which the series of committed events apply.
            </summary>
    </member>
    <member name="P:EventStore.CommittedEventStream.StreamRevision">
      <summary>
            Gets a value indicating the most recent revision of the stream for the events retreived.
            </summary>
    </member>
    <member name="P:EventStore.CommittedEventStream.CommitSequence">
      <summary>
            Gets a value indicating the most recent commit applied to the stream for the events retreived.
            </summary>
    </member>
    <member name="P:EventStore.CommittedEventStream.Events">
      <summary>
            Gets the series of committed events.
            </summary>
    </member>
    <member name="P:EventStore.CommittedEventStream.CommitIdentifiers">
      <summary>
            Gets the set of values which uniquely identify the commits associated with set of events.
            </summary>
    </member>
    <member name="P:EventStore.CommittedEventStream.Snapshot">
      <summary>
            Gets the snapshot, if any, containing a serialized revision of the stream upon which the events provided can be applied.
            </summary>
    </member>
    <member name="T:EventStore.ConcurrencyException">
      <summary>
            Represents an optimistic concurrency conflict between multiple writers.
            </summary>
    </member>
    <member name="M:EventStore.ConcurrencyException.#ctor">
      <summary>
            Initializes a new instance of the ConcurrencyException class.
            </summary>
    </member>
    <member name="M:EventStore.ConcurrencyException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the ConcurrencyException class.
            </summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:EventStore.ConcurrencyException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the ConcurrencyException class.
            </summary>
      <param name="message">The message that describes the error.</param>
      <param name="innerException">The message that is the cause of the current exception.</param>
    </member>
    <member name="M:EventStore.ConcurrencyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the ConcurrencyException class.
            </summary>
      <param name="info">The SerializationInfo that holds the serialized object data of the exception being thrown.</param>
      <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
    </member>
    <member name="T:EventStore.CommitAttempt">
      <summary>
            Represents a series of events to be committed as a single unit and which apply to the stream indicated.
            </summary>
    </member>
    <member name="M:EventStore.CommitAttempt.#ctor">
      <summary>
            Initializes a new instance of the CommitAttempt class.
            </summary>
    </member>
    <member name="M:EventStore.CommitAttempt.ToCommit">
      <summary>
            Converts the attempt into a commit.
            </summary>
      <returns>A fully populated object instance of the <see cref="T:EventStore.Persistence.Commit" /> class.</returns>
    </member>
    <member name="P:EventStore.CommitAttempt.StreamId">
      <summary>
            Gets or sets the value which uniquely identifies the stream to which the commit attempt belongs.
            </summary>
    </member>
    <member name="P:EventStore.CommitAttempt.StreamRevision">
      <summary>
            Gets or sets the value which indicates the new head revision of the stream to which this commit attempt applies.
            </summary>
    </member>
    <member name="P:EventStore.CommitAttempt.CommitId">
      <summary>
            Gets or sets the value which uniquely identifies the commit within the stream.
            </summary>
    </member>
    <member name="P:EventStore.CommitAttempt.PreviousCommitSequence">
      <summary>
            Gets or sets the value which indicates the most recent, known committed sequence for the stream to which this commit attempt applies.
            </summary>
    </member>
    <member name="P:EventStore.CommitAttempt.Headers">
      <summary>
            Gets the metadata which provides additional, unstructured information about this commit attempt.
            </summary>
    </member>
    <member name="P:EventStore.CommitAttempt.Events">
      <summary>
            Gets the collection of event messages to be committed as a single unit.
            </summary>
    </member>
    <member name="T:EventStore.Dispatcher.IDispatchCommits">
      <summary>
            Indicates the ability to dispatch or publish all messages associated with a particular commit.
            </summary>
    </member>
    <member name="M:EventStore.Dispatcher.IDispatchCommits.Dispatch(EventStore.Persistence.Commit)">
      <summary>
            Dispatches the series of messages contained within the commit provided to all interested parties.
            </summary>
      <param name="commit">The commit representing the series of messages to dispatch.</param>
    </member>
    <member name="T:EventStore.IStoreEvents">
      <summary>
            Indicates the ability to store and retreive a stream of events.
            </summary>
    </member>
    <member name="M:EventStore.IStoreEvents.Initialize">
      <summary>
            Initializes the event store, the underlying persistence schema, and ensures all undispatched commits are dispatched.
            </summary>
    </member>
    <member name="M:EventStore.IStoreEvents.ReadUntil(System.Guid,System.Int32)">
      <summary>
            Reads from the stream indicated from most recent snapshot, if any, up to and including the revision specified.
            </summary>
      <param name="streamId">The stream from which the events will be read.</param>
      <param name="maxRevision">The maximum revision of the stream to be read.</param>
      <returns>A series of committed events from the stream specified.</returns>
    </member>
    <member name="M:EventStore.IStoreEvents.ReadFrom(System.Guid,System.Int32)">
      <summary>
            Reads from the stream indicated from the revision specified until the end of the stream.
            </summary>
      <param name="streamId">The stream from which the events will be read.</param>
      <param name="minRevision">The minimum revision of the stream to be read.</param>
      <returns>A series of committed events from the stream specified.</returns>
    </member>
    <member name="M:EventStore.IStoreEvents.Write(EventStore.CommitAttempt)">
      <summary>
            Writes the to-be-commited events provided to the underlying storage infrastructure.
            </summary>
      <param name="attempt">The series of events and associated metadata to be commited.</param>
    </member>
    <member name="T:EventStore.EventMessage">
      <summary>
            Represents a single element in a stream of events.
            </summary>
    </member>
    <member name="M:EventStore.EventMessage.#ctor">
      <summary>
            Initializes a new instance of the EventMessage class.
            </summary>
    </member>
    <member name="P:EventStore.EventMessage.Headers">
      <summary>
            Gets the metadata which provides additional, unstructured information about this message.
            </summary>
    </member>
    <member name="P:EventStore.EventMessage.Body">
      <summary>
            Gets or sets the actual event message body.
            </summary>
    </member>
    <member name="T:EventStore.Persistence.Commit">
      <summary>
            Represents a series of events which have been fully committed as a single unit and which apply to the stream indicated.
            </summary>
    </member>
    <member name="M:EventStore.Persistence.Commit.#ctor(System.Guid,System.Int32,System.Guid,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.List{EventStore.EventMessage},System.Object)">
      <summary>
            Initializes a new instance of the Commit class.
            </summary>
      <param name="streamId">The value which uniquely identifies the stream to which the commit belongs.</param>
      <param name="streamRevision">The value which indicates the revision of the most recent event in the stream to which this commit applies.</param>
      <param name="commitId">The value which uniquely identifies the commit within the stream.</param>
      <param name="commitSequence">The value which indicates the sequence (or position) in the stream to which this commit applies.</param>
      <param name="headers">The metadata which provides additional, unstructured information about this commit.</param>
      <param name="events">The collection of event messages to be committed as a single unit.</param>
      <param name="snapshot">The snapshot, if any, which represents a materialization of the stream at the last event of the commit.</param>
    </member>
    <member name="M:EventStore.Persistence.Commit.Equals(System.Object)">
      <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>If the two objects are equal, returns true; otherwise false.</returns>
    </member>
    <member name="M:EventStore.Persistence.Commit.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>The hash code for this instance.</returns>
    </member>
    <member name="P:EventStore.Persistence.Commit.StreamId">
      <summary>
            Gets the value which uniquely identifies the stream to which the commit belongs.
            </summary>
    </member>
    <member name="P:EventStore.Persistence.Commit.StreamRevision">
      <summary>
            Gets the value which indicates the revision of the most recent event in the stream to which this commit applies.
            </summary>
    </member>
    <member name="P:EventStore.Persistence.Commit.CommitId">
      <summary>
            Gets the value which uniquely identifies the commit within the stream.
            </summary>
    </member>
    <member name="P:EventStore.Persistence.Commit.CommitSequence">
      <summary>
            Gets the value which indicates the sequence (or position) in the stream to which this commit applies.
            </summary>
    </member>
    <member name="P:EventStore.Persistence.Commit.Headers">
      <summary>
            Gets the metadata which provides additional, unstructured information about this commit.
            </summary>
    </member>
    <member name="P:EventStore.Persistence.Commit.Events">
      <summary>
            Gets the collection of event messages to be committed as a single unit.
            </summary>
    </member>
    <member name="P:EventStore.Persistence.Commit.Snapshot">
      <summary>
            Gets the snapshot, if any, which represents a materialization of the stream at the last event of the commit.
            </summary>
    </member>
    <member name="T:EventStore.Persistence.IPersistenceFactory">
      <summary>
            Indicates the ability to build a ready-to-use persistence engine.
            </summary>
    </member>
    <member name="M:EventStore.Persistence.IPersistenceFactory.Build">
      <summary>
            Builds a persistence engine.
            </summary>
      <returns>A ready-to-use persistence engine.</returns>
    </member>
    <member name="T:EventStore.Serialization.ISerialize">
      <summary>
            Provides the ability to serialize and deserialize an object graph.
            </summary>
    </member>
    <member name="M:EventStore.Serialization.ISerialize.Serialize(System.IO.Stream,System.Object)">
      <summary>
            Serializes the object graph provided and writes a serialized representation to the output stream provided.
            </summary>
      <param name="output">The stream into which the serialized object graph should be written.</param>
      <param name="graph">The object graph to be serialized.</param>
    </member>
    <member name="M:EventStore.Serialization.ISerialize.Deserialize(System.IO.Stream)">
      <summary>
            Deserializes the stream provided and reconstructs the corresponding object graph.
            </summary>
      <param name="input">The stream of bytes from which the object will be reconstructed.</param>
      <returns>The reconstructed object.</returns>
    </member>
    <member name="T:EventStore.DuplicateCommitException">
      <summary>
            Represents an attempt to commit the same information more than once.
            </summary>
    </member>
    <member name="M:EventStore.DuplicateCommitException.#ctor">
      <summary>
            Initializes a new instance of the DuplicateCommitException class.
            </summary>
    </member>
    <member name="M:EventStore.DuplicateCommitException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the DuplicateCommitException class.
            </summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:EventStore.DuplicateCommitException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the DuplicateCommitException class.
            </summary>
      <param name="message">The message that describes the error.</param>
      <param name="innerException">The message that is the cause of the current exception.</param>
    </member>
    <member name="M:EventStore.DuplicateCommitException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the DuplicateCommitException class.
            </summary>
      <param name="info">The SerializationInfo that holds the serialized object data of the exception being thrown.</param>
      <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
    </member>
    <member name="T:EventStore.Persistence.IPersistStreams">
      <summary>
            Indicates the ability to adapt the underlying persistence infrastructure to behave like a stream of events.
            </summary>
    </member>
    <member name="M:EventStore.Persistence.IPersistStreams.Initialize">
      <summary>
            Initializes and prepares the storage for use, if not already performed.
            </summary>
    </member>
    <member name="M:EventStore.Persistence.IPersistStreams.GetUntil(System.Guid,System.Int32)">
      <summary>
            Gets the corresponding commits from the stream indicated starting at the most recent snapshot, if any,
            up to and including the revision specified sorted in ascending order--from oldest to newest.
            </summary>
      <param name="streamId">The stream from which the events will be read.</param>
      <param name="maxRevision">The maximum revision of the stream to be read.</param>
      <returns>A series of committed events from the stream specified sorted in ascending order.</returns>
    </member>
    <member name="M:EventStore.Persistence.IPersistStreams.GetFrom(System.Guid,System.Int32)">
      <summary>
            Gets the corresponding commits from the stream indicated starting at the revision specified until the
            end of the stream sorted in ascending order--from oldest to newest.
            </summary>
      <param name="streamId">The stream from which the events will be read.</param>
      <param name="minRevision">The minimum revision of the stream to be read.</param>
      <returns>A series of committed events from the stream specified sorted in ascending order..</returns>
    </member>
    <member name="M:EventStore.Persistence.IPersistStreams.Persist(EventStore.CommitAttempt)">
      <summary>
            Writes the to-be-commited events provided to the underlying persistence mechanism.
            </summary>
      <param name="uncommitted">The series of events and associated metadata to be commited.</param>
    </member>
    <member name="M:EventStore.Persistence.IPersistStreams.GetUndispatchedCommits">
      <summary>
            Gets a set of commits that has not yet been dispatched.
            </summary>
      <returns>The set of commits to be dispatched.</returns>
    </member>
    <member name="M:EventStore.Persistence.IPersistStreams.MarkCommitAsDispatched(EventStore.Persistence.Commit)">
      <summary>
            Marks the commit specified as dispatched.
            </summary>
      <param name="commit">The commit to be marked as dispatched.</param>
    </member>
    <member name="M:EventStore.Persistence.IPersistStreams.GetStreamsToSnapshot(System.Int32)">
      <summary>
            Gets identifiers for all streams whose head and last snapshot revisions differ by at least the threshold specified.
            </summary>
      <param name="maxThreshold">The maximum difference between the head and most recent snapshot revisions.</param>
      <returns>The streams for which the head and snapshot revisions differ by at least the threshold specified.</returns>
    </member>
    <member name="M:EventStore.Persistence.IPersistStreams.AddSnapshot(System.Guid,System.Int32,System.Object)">
      <summary>
            Adds the snapshot provided to the stream indicated the commit sequence specified.
            </summary>
      <param name="streamId">The value which uniquely identifies the stream to which the snapshot applies.</param>
      <param name="streamRevision">The position at which the snapshot applies.</param>
      <param name="snapshot">The snapshot or materialized view of the stream at the revision indicated.</param>
    </member>
    <member name="T:EventStore.Persistence.PersistenceEngineException">
      <summary>
            Represents a general failure of the storage engine or persistence infrastructure.
            </summary>
    </member>
    <member name="M:EventStore.Persistence.PersistenceEngineException.#ctor">
      <summary>
            Initializes a new instance of the PersistenceEngineException class.
            </summary>
    </member>
    <member name="M:EventStore.Persistence.PersistenceEngineException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the PersistenceEngineException class.
            </summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:EventStore.Persistence.PersistenceEngineException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the PersistenceEngineException class.
            </summary>
      <param name="message">The message that describes the error.</param>
      <param name="innerException">The message that is the cause of the current exception.</param>
    </member>
    <member name="M:EventStore.Persistence.PersistenceEngineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the PersistenceEngineException class.
            </summary>
      <param name="info">The SerializationInfo that holds the serialized object data of the exception being thrown.</param>
      <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
    </member>
    <member name="T:EventStore.Serialization.SerializationExtensions">
      <summary>
            Implements extension methods that make call to the serialization infrastructure more simple.
            </summary>
    </member>
    <member name="M:EventStore.Serialization.SerializationExtensions.Serialize(EventStore.Serialization.ISerialize,System.Object)">
      <summary>
            Serializes the object provided.
            </summary>
      <param name="serializer">The serializer to use.</param>
      <param name="value">The object graph to be serialized.</param>
      <returns>A serialized representation of the object graph provided.</returns>
    </member>
    <member name="M:EventStore.Serialization.SerializationExtensions.Deserialize(EventStore.Serialization.ISerialize,System.Byte[])">
      <summary>
            Deserializes the array of bytes provided.
            </summary>
      <param name="serializer">The serializer to use.</param>
      <param name="serialized">The serialized array of bytes.</param>
      <returns>The reconstituted object, if any.</returns>
    </member>
    <member name="T:EventStore.Persistence.StreamHead">
      <summary>
            Indicates the most recent information representing the head of a given stream.
            </summary>
    </member>
    <member name="M:EventStore.Persistence.StreamHead.#ctor(System.Guid,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the StreamHead class.
            </summary>
      <param name="streamId">The value which uniquely identifies the stream where the last snapshot exceeds the allowed threshold.</param>
      <param name="headRevision">The value which indicates the revision, length, or number of events committed to the stream.</param>
      <param name="snapshotRevision">The value which indicates the revision at which the last snapshot was taken.</param>
    </member>
    <member name="M:EventStore.Persistence.StreamHead.#ctor">
      <summary>
            Initializes a new instance of the StreamHead class.
            </summary>
    </member>
    <member name="M:EventStore.Persistence.StreamHead.Equals(System.Object)">
      <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>If the two objects are equal, returns true; otherwise false.</returns>
    </member>
    <member name="M:EventStore.Persistence.StreamHead.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>The hash code for this instance.</returns>
    </member>
    <member name="P:EventStore.Persistence.StreamHead.StreamId">
      <summary>
            Gets the value which uniquely identifies the stream where the last snapshot exceeds the allowed threshold.
            </summary>
    </member>
    <member name="P:EventStore.Persistence.StreamHead.HeadRevision">
      <summary>
            Gets the value which indicates the revision, length, or number of events committed to the stream.
            </summary>
    </member>
    <member name="P:EventStore.Persistence.StreamHead.SnapshotRevision">
      <summary>
            Gets the value which indicates the revision at which the last snapshot was taken.
            </summary>
    </member>
  </members>
</doc>